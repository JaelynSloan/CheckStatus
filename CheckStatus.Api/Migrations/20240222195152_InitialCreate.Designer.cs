// <auto-generated />
using CheckStatus.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheckStatus.Api.Migrations
{
    [DbContext(typeof(CheckStatusDbContext))]
    [Migration("20240222195152_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CheckStatus.Api.Entities.SiteStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IpAddress = "127.0.0.1",
                            IsOnline = true,
                            SiteName = "Georgetown"
                        },
                        new
                        {
                            Id = 2,
                            IpAddress = "127.0.0.1",
                            IsOnline = true,
                            SiteName = "Nicholasville"
                        },
                        new
                        {
                            Id = 3,
                            IpAddress = "127.0.0.1",
                            IsOnline = true,
                            SiteName = "Louisville"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
